// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241117161544_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("document_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_document_number");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_document_type");

                    b.Property<int>("RecipientOrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("c_document_recipient_organization_id");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("c_document_registrationdate");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("c_document_sender_id");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_document_summary");

                    b.HasKey("DocumentId")
                        .HasName("pk_cd_document_document_id");

                    b.HasIndex("RecipientOrganizationId");

                    b.HasIndex("SenderId");

                    b.ToTable("cd_document", (string)null);
                });

            modelBuilder.Entity("Project.Models.RecipientOrganization", b =>
                {
                    b.Property<int>("RecipientOrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipient_organization_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipientOrganizationId"));

                    b.Property<string>("DirectorFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_organization_directorfullname");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_organization_fullname");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_organization_legaladdress");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_organization_phone");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_organization_shortname");

                    b.HasKey("RecipientOrganizationId")
                        .HasName("pk_cd_recipient_organization_organization_id");

                    b.ToTable("cd_recipient_organization", (string)null);
                });

            modelBuilder.Entity("Project.Models.Sender", b =>
                {
                    b.Property<int>("SenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SenderId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_sender_firstname");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("c_sender_hiredate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_sender_lastname");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_sender_middlename");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_sender_position");

                    b.HasKey("SenderId")
                        .HasName("pk_cd_sender_sender_id");

                    b.ToTable("cd_sender", (string)null);
                });

            modelBuilder.Entity("Project.Models.Document", b =>
                {
                    b.HasOne("Project.Models.RecipientOrganization", "RecipientOrganization")
                        .WithMany()
                        .HasForeignKey("RecipientOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_recipient_organization_id");

                    b.HasOne("Project.Models.Sender", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_sender_id");

                    b.Navigation("RecipientOrganization");

                    b.Navigation("Sender");
                });
#pragma warning restore 612, 618
        }
    }
}
